<?php
/**
 * Plugin Name: WP Rocket | Modify the Used CSS
 * Description: Allows various modifications to the contents of the Used CSS generated by Remove Unused CSS
 * Author:      WP Rocket Support Team
 * Author URI:  http://wp-rocket.me/
 * License:     GNU General Public License v2 or later
 * License URI: http://www.gnu.org/licenses/gpl-2.0.html
 *
 * Copyright SAS WP MEDIA 2024
 */

namespace WP_Rocket\Helpers\rucss\rucss_modify_used_css;

// Standard plugin security, keep this line in place.
defined( 'ABSPATH' ) or die();

/**
 * Edit the items below to modify the Used CSS as needed
 * See README.md file for detailed notes on how to use each:
 * https://github.com/wp-media/wp-rocket-helpers/tree/master/rucss/wp-rocket-modify-used-css
 */

define( 'WPRH_MOD_USED_CSS_PARAMS', [

  // EDIT HERE:
  'rocket_rucss_external_exclusions' => [
    // '/wp-content/plugins/plugin-name/css/file.css',
  ],

  'rocket_rucss_inline_content_exclusions' => [
    // '.targetSelector',
  ],

  'rocket_rucss_inline_atts_exclusions' => [
    // 'data-example-1',
    // 'data-example-2="the-value"',
    // "data-example-3='the-value'",
  ],

  'rocket_rucss_skip_styles_with_attr' => [
    // 'data-example-1',
    // 'data-example-2="the-value"',
    // "data-example-3='the-value'",
  ],

  'prepend_css' => [
    // '.new_css{background:red;}',
  ],

  'append_css' => [
    // '.new_css{background:red;}',
  ],

  'filter_css' => [
    // '.to-be-removed{padding:10px};'
    // =>
    // '.to-be-inserted{padding:20px};',
  ],
  // STOP EDITING

] );


// DO NOT MAKE EDITS BELOW THIS LINE UNLESS YOU KNOW WHAT YOU'RE DOING


function add_rucss_exclusions( $exclusions = array() ) {

  $current_filter = current_filter();

  if ( empty( WPRH_MOD_USED_CSS_PARAMS[$current_filter] ) ) {
    return $exclusions;
  }

  foreach ( WPRH_MOD_USED_CSS_PARAMS[$current_filter] as $exclusion ) {
	  $exclusions[] = $exclusion;
  }

	return $exclusions;
}

// Exclude external stylesheets from being removed by WP Rocket's Remove Unused CSS optimization.
add_filter( 'rocket_rucss_external_exclusions', __NAMESPACE__ . '\add_rucss_exclusions' );

// Exclude inline styles from being removed by WP Rocket's Remove Unused CSS optimization.
add_filter( 'rocket_rucss_inline_content_exclusions', __NAMESPACE__ . '\add_rucss_exclusions' );

// Exclude inline styles from being removed by WP Rocket's Remove Unused CSS optimization.
add_filter( 'rocket_rucss_inline_atts_exclusions', __NAMESPACE__ . '\add_rucss_exclusions' );

// Completely remove styles with target attributes from page.
add_filter( 'rocket_rucss_skip_styles_with_attr', __NAMESPACE__ . '\add_rucss_exclusions' );


// Modify Used CSS by prepending, appending, or filtering values, depending on configs
function filter_css( $css ) {

  if ( ! empty( WPRH_MOD_USED_CSS_PARAMS['prepend_css'] ) ) {
    foreach ( WPRH_MOD_USED_CSS_PARAMS['prepend_css'] as $prepend_css ) {
      $css = $prepend_css . $css;
    }
  }

  if ( ! empty( WPRH_MOD_USED_CSS_PARAMS['append_css'] ) ) {
    foreach ( WPRH_MOD_USED_CSS_PARAMS['append_css'] as $append_css ) {
      $css = $css . $append_css;
    }
  }

  if ( ! empty( WPRH_MOD_USED_CSS_PARAMS['filter_css'] ) ) {
    foreach ( WPRH_MOD_USED_CSS_PARAMS['filter_css'] as $to_be_removed => $to_be_inserted ) {
      $css = str_replace( $to_be_removed, $to_be_inserted, $css );
    }
  }

  return $css;
}
add_filter( 'rocket_usedcss_content', __NAMESPACE__ . '\filter_css' );


/**
 * Clear cache or Used CSS (whichever is needed) on activation and deactivation.
 */
function clear_cache_or_used_css() {

	if ( ! function_exists( 'rocket_clean_domain' ) ) {
		return false;
	}

  if ( ! empty( WPRH_MOD_USED_CSS_PARAMS['rocket_rucss_skip_styles_with_attr'] ) ) {

    // Clear Used CSS
    $container = apply_filters( 'rocket_container', null );
    $subscriber = $container->get( 'rucss_admin_subscriber' );
    $subscriber->truncate_used_css();

  } else {

    // Only need to clear cache
    rocket_clean_domain();
  }
}
register_activation_hook( __FILE__, __NAMESPACE__ . '\clear_cache_or_used_css' );
register_deactivation_hook( __FILE__, __NAMESPACE__ . '\clear_cache_or_used_css' );
